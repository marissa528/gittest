///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N7UK
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DownloadBrochure recording.
    /// </summary>
    [TestModule("39d07a3a-20e0-444e-bc20-022800dfd8e6", ModuleType.Recording, 1)]
    public partial class DownloadBrochure : ITestModule
    {
        /// <summary>
        /// Holds an instance of the N7UKRepository repository.
        /// </summary>
        public static N7UKRepository repo = N7UKRepository.Instance;

        static DownloadBrochure instance = new DownloadBrochure();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DownloadBrochure()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DownloadBrochure Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://www.hearyourway.com/wps/wcm/connect/uk/n7/home' with browser 'chrome' in normal mode.", new RecordItemIndex(0));
            //Host.Current.OpenBrowser("http://www.hearyourway.com/wps/wcm/connect/uk/n7/home", "chrome", "", false, false, false, false, false);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'CochlearImplantSoundProcessorNucleus.DownloadBrochure'.", repo.CochlearImplantSoundProcessorNucleus.DownloadBrochureInfo, new RecordItemIndex(1));
            Validate.Exists(repo.CochlearImplantSoundProcessorNucleus.DownloadBrochureInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CochlearImplantSoundProcessorNucleus.DownloadBrochure' at 110;14.", repo.CochlearImplantSoundProcessorNucleus.DownloadBrochureInfo, new RecordItemIndex(2));
            repo.CochlearImplantSoundProcessorNucleus.DownloadBrochure.Click("110;14");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'CochlearImplantSoundProcessorNucleus.RequestABrochure'.", repo.CochlearImplantSoundProcessorNucleus.RequestABrochureInfo, new RecordItemIndex(3));
            Validate.Exists(repo.CochlearImplantSoundProcessorNucleus.RequestABrochureInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CochlearImplantSoundProcessorNucleus.ControlIndicator' at 15;20.", repo.CochlearImplantSoundProcessorNucleus.ControlIndicatorInfo, new RecordItemIndex(4));
            repo.CochlearImplantSoundProcessorNucleus.ControlIndicator.Click("15;20");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CochlearImplantSoundProcessorNucleus.FirstName' at 39;15.", repo.CochlearImplantSoundProcessorNucleus.FirstNameInfo, new RecordItemIndex(5));
            repo.CochlearImplantSoundProcessorNucleus.FirstName.Click("39;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Cochlear' with focus on 'CochlearImplantSoundProcessorNucleus.FirstName'.", repo.CochlearImplantSoundProcessorNucleus.FirstNameInfo, new RecordItemIndex(6));
            repo.CochlearImplantSoundProcessorNucleus.FirstName.PressKeys("Cochlear");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Test' with focus on 'CochlearImplantSoundProcessorNucleus.FirstName'.", repo.CochlearImplantSoundProcessorNucleus.FirstNameInfo, new RecordItemIndex(7));
            repo.CochlearImplantSoundProcessorNucleus.FirstName.PressKeys("Test");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CochlearImplantSoundProcessorNucleus.FirstName' at 30;16.", repo.CochlearImplantSoundProcessorNucleus.FirstNameInfo, new RecordItemIndex(8));
            repo.CochlearImplantSoundProcessorNucleus.FirstName.Click("30;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'CochlearImplantSoundProcessorNucleus.FirstName'.", repo.CochlearImplantSoundProcessorNucleus.FirstNameInfo, new RecordItemIndex(9));
            repo.CochlearImplantSoundProcessorNucleus.FirstName.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CochlearImplantSoundProcessorNucleus.LastName' at 36;17.", repo.CochlearImplantSoundProcessorNucleus.LastNameInfo, new RecordItemIndex(10));
            repo.CochlearImplantSoundProcessorNucleus.LastName.Click("36;17");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'CochlearTest' with focus on 'CochlearImplantSoundProcessorNucleus.LastName'.", repo.CochlearImplantSoundProcessorNucleus.LastNameInfo, new RecordItemIndex(11));
            repo.CochlearImplantSoundProcessorNucleus.LastName.PressKeys("CochlearTest");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CochlearImplantSoundProcessorNucleus.Email' at 82;21.", repo.CochlearImplantSoundProcessorNucleus.EmailInfo, new RecordItemIndex(12));
            repo.CochlearImplantSoundProcessorNucleus.Email.Click("82;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'mmatisa{LShiftKey down}@{LShiftKey up}cochlear.com' with focus on 'CochlearImplantSoundProcessorNucleus.Email'.", repo.CochlearImplantSoundProcessorNucleus.EmailInfo, new RecordItemIndex(13));
            repo.CochlearImplantSoundProcessorNucleus.Email.PressKeys("mmatisa{LShiftKey down}@{LShiftKey up}cochlear.com");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CochlearImplantSoundProcessorNucleus.FluidContainer.OuterNoGradientHiddenXs1' at 259;482.", repo.CochlearImplantSoundProcessorNucleus.FluidContainer.OuterNoGradientHiddenXs1Info, new RecordItemIndex(14));
            repo.CochlearImplantSoundProcessorNucleus.FluidContainer.OuterNoGradientHiddenXs1.Click("259;482");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CochlearImplantSoundProcessorNucleus.ControlIndicator1' at 12;15.", repo.CochlearImplantSoundProcessorNucleus.ControlIndicator1Info, new RecordItemIndex(15));
            repo.CochlearImplantSoundProcessorNucleus.ControlIndicator1.Click("12;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CochlearImplantSoundProcessorNucleus1' at 23;67.", repo.CochlearImplantSoundProcessorNucleus1.SelfInfo, new RecordItemIndex(16));
            repo.CochlearImplantSoundProcessorNucleus1.Self.Click("23;67");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'CochlearImplantSoundProcessorNucleus.DownloadBrochure'.", repo.CochlearImplantSoundProcessorNucleus.DownloadBrochureInfo, new RecordItemIndex(17));
            Validate.Exists(repo.CochlearImplantSoundProcessorNucleus.DownloadBrochureInfo);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
